package gql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"
	"fmt"

	"github.com/synt4xer/govest/internal/gql/model"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input model.CreateUserInput) (*model.User, error) {
	panic(fmt.Errorf("not implemented: CreateUser - createUser"))
}

// BuyStock is the resolver for the buyStock field.
func (r *mutationResolver) BuyStock(ctx context.Context, input model.StockTransactionInput) (*model.Transaction, error) {
	panic(fmt.Errorf("not implemented: BuyStock - buyStock"))
}

// SellStock is the resolver for the sellStock field.
func (r *mutationResolver) SellStock(ctx context.Context, input model.StockTransactionInput) (*model.Transaction, error) {
	panic(fmt.Errorf("not implemented: SellStock - sellStock"))
}

// GetUser is the resolver for the getUser field.
func (r *queryResolver) GetUser(ctx context.Context, id string) (*model.User, error) {
	panic(fmt.Errorf("not implemented: GetUser - getUser"))
}

// ListUsers is the resolver for the listUsers field.
func (r *queryResolver) ListUsers(ctx context.Context) ([]*model.User, error) {
	panic(fmt.Errorf("not implemented: ListUsers - listUsers"))
}

// ListStocks is the resolver for the listStocks field.
func (r *queryResolver) ListStocks(ctx context.Context) ([]*model.Stock, error) {
	panic(fmt.Errorf("not implemented: ListStocks - listStocks"))
}

// GetPortfolio is the resolver for the getPortfolio field.
func (r *queryResolver) GetPortfolio(ctx context.Context, userID string) ([]*model.Portfolio, error) {
	panic(fmt.Errorf("not implemented: GetPortfolio - getPortfolio"))
}

// GetTransactions is the resolver for the getTransactions field.
func (r *queryResolver) GetTransactions(ctx context.Context, userID string) ([]*model.Transaction, error) {
	panic(fmt.Errorf("not implemented: GetTransactions - getTransactions"))
}

// GetUnrealizedProfitLoss is the resolver for the getUnrealizedProfitLoss field.
func (r *queryResolver) GetUnrealizedProfitLoss(ctx context.Context, userID string) (float64, error) {
	panic(fmt.Errorf("not implemented: GetUnrealizedProfitLoss - getUnrealizedProfitLoss"))
}

// GetRealizedProfitLoss is the resolver for the getRealizedProfitLoss field.
func (r *queryResolver) GetRealizedProfitLoss(ctx context.Context, userID string) (float64, error) {
	panic(fmt.Errorf("not implemented: GetRealizedProfitLoss - getRealizedProfitLoss"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
